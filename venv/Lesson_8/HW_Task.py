import json
import csv
import pickle
import os

# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
# –æ–±—Ö–æ–¥–∏—Ç –µ–µÃà –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–∏ÃÜ–ª—ã json, csv –∏ pickle.
#   ‚óã –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–∏ÃÜ—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
#   ‚óã –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–∏ÃÜ–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
#   ‚óã –î–ª—è —Ñ–∞–∏ÃÜ–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–∏ÃÜ—Ç–∞—Ö, –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ÃÜ —Ä–∞–∑–º–µ—Ä —Ñ–∞–∏ÃÜ–ª–æ–≤ –≤ –Ω–µ–∏ÃÜ —Å —É—á–µÃà—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–∏ÃÜ–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ÃÜ.

def recursively_bypasses(dir: str):
    size_dirs = 0
    my_dict = {}
    for file in os.listdir(dir):
        path = os.path.join(dir, file)
        item_dict = {'parent': path.split("/")[-2], 'type': None, 'size': None}
        my_dict[path.split("/")[-1]] = item_dict
        if os.path.isfile(path):
            item_dict['type'] = 'file'
            item_dict['size'] = f"{os.path.getsize(path)} bytes"
        elif os.path.isdir(path):
            size_dirs += os.path.getsize(path)
            item_dict['type'] = 'folder'
            item_dict['size'] = f"{size_dirs} bytes"
            my_dict.update(recursively_bypasses(path))
    return my_dict



def save_result_json(my_dict: dict):
    with open("dir_json.json", 'w', encoding='utf-8') as write_file:
        json.dump(my_dict, write_file, ensure_ascii=False, indent=4)

def save_result_csv(my_dict: dict):
    with open("dir_csv.csv", 'w', encoding='utf-8', newline='') as write_file:
        writer = csv.writer(write_file, dialect='excel', quoting=csv.QUOTE_NONNUMERIC, delimiter=',')
        writer.writerow(('name', 'parent', 'type', 'size'))
        for k, v in my_dict.items():
            writer.writerow((k, v['parent'], v['type'], v['size']))

def save_result_pickle(my_dict: dict):
    with open('dir_pickle.pickle', 'wb') as f:
        pickle.dump(my_dict, f)



if __name__ == '__main__':
    my_dict = recursively_bypasses("/Users/dasa/Documents/geekbrains/Python2.0/venv/Test")
    save_result_json(my_dict)
    save_result_csv(my_dict)
    save_result_pickle(my_dict)

