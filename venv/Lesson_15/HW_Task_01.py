import logging
import sys
from datetime import datetime
from calendar import monthrange

'''
–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3—è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
üìå –ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ, —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

'''

logging.basicConfig(filename='date.log', level=logging.ERROR, encoding='utf-8')

def task_date(text: str=''):
    try:
        week, day, month = check_data(text)
        year = datetime.now().year
        days_count = monthrange(year, month)[1]
        week_counter = 0
        for i in range(1, days_count + 1):
            data = datetime(day=i, month=month, year=year)
            if data.weekday() == day:
                week_counter += 1
                if week_counter == week:
                    return data
    except Exception as e:
        logging.error(f'–£ –≤–∞—Å –æ—à–∏–±–∫–∞: {e}')


def check_data(text:str):
    months = {'—è–Ω–≤': 1, '—Ñ–µ–≤': 2, '–º–∞—Ä': 3, "–∞–ø—Ä": 4, "–º–∞—è": 5, "–∏—é–Ω": 6, "–∏—é–ª": 7, "–∞–≤–≥": 8, "—Å–µ–Ω": 9,
              "–æ–∫—Ç": 10, "–Ω–æ—è": 11, "–¥–µ–∫": 12}
    days = {"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 0, "–≤—Ç–æ—Ä–Ω–∏–∫": 1, "—Å—Ä–µ–¥–∞": 2, "—á–µ—Ç–≤–µ—Ä–≥": 3, "–ø—è—Ç–Ω–∏—Ü–∞": 4, "—Å—É–±–±–æ—Ç–∞": 5, "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 6}
    week = 0
    day = datetime.now().weekday()
    month = datetime.now().month
    try:
        data = text.split()
        for inf in data:
            if inf.isalpha():
                if inf in months:
                    month = months.get(inf[:3], None)
                if inf in days:
                    day = days.get(inf, None)
            else:
                if inf[0].isdigit():
                    week = int(inf[0])
        return week, day, month
    except Exception:
        return Exception

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='time')
    parser.add_argument('-text', metavar='text', type=str, help='enter week', default="3—è —Å—Ä–µ–¥–∞ –º–∞—è")
    # parser.add_argument('-week', metavar='week', type=str, help='enter week', default=1)
    # parser.add_argument('-day', metavar='day', type=str, help='enter day', default=datetime.now().weekday())
    # parser.add_argument('-month', metavar='month', type=str, help='enter month', default=datetime.now().month)

