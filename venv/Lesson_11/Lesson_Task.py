import datetime

'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ú–æ—è –°—Ç—Ä–æ–∫–∞, –≥–¥–µ:
    üìå –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ str
    üìå –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è –∏–º—è –∞–≤—Ç–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è (time.time)
    
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä—É —Å–≤–æ–∏ÃÜ—Å—Ç–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–æ –∏ —Å—Ç—Ä–æ–∫—É.
    üìå –ü—Ä–∏ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞, —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞—Ä—É —Å–ø–∏—Å–∫–æ–≤- –∞—Ä—Ö–∏–≤–æ–≤
    üìå list-–∞—Ä—Ö–∏–≤—ã —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞

 –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
    üìå –î–æ–±–∞–≤—å—Ç–µ –∫ –∑–∞–¥–∞—á–∞–º 1 –∏ 2 —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–æ–≤.
    
 –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
    üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤ –∏–∑ –∑–∞–¥–∞—á–∏ 2.
    üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
      
 –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
    üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
    üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
    üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–∏ÃÜ —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
    üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
    üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–∏ÃÜ—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–∏ÃÜ.
                    
 –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
    üìå –î–æ—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –ø—Ä–æ—à–ª—É—é –∑–∞–¥–∞—á—É.
    üìå –î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏
    üìå –î–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —à–µ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ÃÜ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    
'''

class MyStroke(str):
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ú–æ—è –°—Ç—Ä–æ–∫–∞, –≥–¥–µ:
    üìå –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ str
    üìå –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è –∏–º—è –∞–≤—Ç–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è (time.time)
    '''
    def __new__(cls, value, name):
        instance = super().__new__(cls, value)
        instance.name = name
        instance.date = datetime.datetime.now()
        return instance

    def __str__(self):
        return f'–ò–º—è –∞–≤—Ç–æ—Ä–∞ - {self.name}, –í—Ä–µ–º—è - {self.date}'

    def __repr__(self):
        return f'–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ \n–ò–º—è –∞–≤—Ç–æ—Ä–∞ - {self.name}, –í—Ä–µ–º—è - {self.date}'


class Archive:
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä—É —Å–≤–æ–∏ÃÜ—Å—Ç–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–æ –∏ —Å—Ç—Ä–æ–∫—É.
    üìå –ü—Ä–∏ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞, —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞—Ä—É —Å–ø–∏—Å–∫–æ–≤- –∞—Ä—Ö–∏–≤–æ–≤
    üìå list-–∞—Ä—Ö–∏–≤—ã —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    '''

    _instance = None
    _archive_ls = []

    def __new__(cls, name: str, number: int):
        instance = super().__new__(cls)
        if cls._instance is None:
            cls._instance = instance
        else:
            cls._archive_ls.append(cls._instance)
            cls._instance = instance
        instance.archive_ls = cls._archive_ls.copy()
        return cls._instance

    def __init__(self, name: str, number: int):
        self.name = name
        self.number = number

    def __str__(self):
        return f'{self.name} {self.number}'

    def __repr__(self):
        return f'{self.name} {self.number}'

class Rectangle:
    '''
     –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
    üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
    üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
    üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–∏ÃÜ —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
    üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
    üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–∏ÃÜ—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–∏ÃÜ.
    '''

    def __init__(self, length: int, width: int = None):
        self.length = length
        self.width = width if width is not None else length

    def perimeter(self):
        ''' Perimeter'''
        return (self.length + self.width) * 2

    def square(self):
        ''' Square'''
        return self.length * self.width

    def __doc__(self):
        return "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"

    def __add__(self, other):
        ''' —Å–ª–æ–∂–µ–Ω–∏—è'''
        return self.perimeter() + other.perimeter()

    def __sub__(self, other):
        ''' –≤—ã—á–∏—Ç–∞–Ω–∏—è '''
        return abs(self.perimeter() - other.perimeter())

    def __eq__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() == other.square()

    def __ne__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() != other.square()

    def __gt__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() > other.square()

    def __ge__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() >= other.square()

    def __lt__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() < other.square()

    def __le__(self, other):
        ''' —Å—Ä–∞–≤–Ω–µ–Ω–∏—è'''
        return self.square() <= other.square()

    def __str__(self):
        return f'–î–ª–∏–Ω–∞ - {self.length}, –®–∏—Ä–∏–Ω–∞ - {self.width}'

    def __repr__(self):
        return f'–î–ª–∏–Ω–∞ - {self.length}, –®–∏—Ä–∏–Ω–∞ - {self.width}'






if __name__ == '__main__':
    # arc1 = Archive("ffff", 1)
    # arc2 = Archive("ffff", 12)
    # arc3 = Archive("ffff", 14)
    # arc4 = Archive("ffff", 15)
    # print(Archive._archive_ls)
    # print(arc1._archive_ls)
    # help(MyStroke)
    # rec1 = Rectangle(5, 15)
    # rec2 = Rectangle(15, 5)
    # print(rec1 - rec2)
    # print(rec1 < rec2)
    help(Rectangle)


