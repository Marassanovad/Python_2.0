'''
–ó–∞–¥–∞–Ω–∏–µ No1
üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω –Ω–µ –≤–≤–µ–¥–µÃà—Ç —Ü–µ–ª–æ–µ –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ.
üìå –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–∏ÃÜ—Ç–µ –Ω–µ —á–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.

 –ó–∞–¥–∞–Ω–∏–µ No2
üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∞–Ω–∞–ª–æ–≥ get –¥–ª—è —Å–ª–æ–≤–∞—Ä—è.
üìå –ü–æ–º–∏–º–æ —Å–∞–º–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–ª—é—á –∏
–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
üìå –ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–ª—é—á—É —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
üìå –†–µ–∞–ª–∏–∑—É–∏ÃÜ—Ç–µ —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ÃÜ.

 –ó–∞–¥–∞–Ω–∏–µ No3
üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å —Å –±–∞–∑–æ–≤—ã–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∏ –¥–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã- –∏—Å–∫–ª—é—á–µ–Ω–∏—è:
‚óã –æ—à–∏–±–∫–∞ —É—Ä–æ–≤–Ω—è,
‚óã –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞.

 –ó–∞–¥–∞–Ω–∏–µ No4
üìå –í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞ 8 –ø—Ä–æ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∏–º—è, –ª–∏—á–Ω—ã–∏ÃÜ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7) —Å–æ—Ö—Ä–∞–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–∏ÃÜ–ª.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Ö—Ä–∞–Ω–∏—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
üìå –û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ JSON —Ñ–∞–∏ÃÜ–ª–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ.

 –ó–∞–¥–∞–Ω–∏–µ No5
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 3 –∏ 4. –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
üìå –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –∑–∞–¥–∞–Ω–∏—è 4)
üìå –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ –º–∞–≥–∏—á–µ—Å–∫–∏–∏ÃÜ –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞. –ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ.
üìå –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω—å—à–µ, —á–µ–º –≤–∞—à —É—Ä–æ–≤–µ–Ω—å, –≤—ã–∑—ã–≤–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.

 –ó–∞–¥–∞–Ω–∏–µ No6
üìå –î–æ—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –≤—ã–¥–∞–ª–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö.
üìå –ü–µ—Ä–µ–¥–∞–≤–∞–∏ÃÜ—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞.
'''

def number():
    while True:
        try:
            num = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
            if '.' in num:
                return float(num)
            return int(num)
        except ValueError as e:
            print(f'–û—à–∏–±–∫–∞: {e}')


def get_dict(dict_work: dict, default_value):
    try:
        return dict_work[key]
    except Exception:
        return default_value


class ErrorDefault(Exception):
    def __init__(self, *args: object):
        super().__init__(*args)

    def __str__(self):
        return '–Ø —Ä–æ–¥–∏–ª—Å—è'

class ErrorLevel(ErrorDefault):
    def __init__(self, *args: object):
        super().__init__(*args)

    def __str__(self, string: str = '') -> str:
        return 'Error level' + string

class ErrorAccess(ErrorLevel):
    def __str__(self, string: str = '') -> str:
        return 'Error Access' + string

class User:

    def __init__(self, name, id, access_lvl):
        self.name = name
        self.id = id
        self.access_lvl = access_lvl

    def user_input(self):
        user_list = []
        
        while True:
            name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
            if not name:
                return User(*user_list)
            while True:
                id_ = input("–í–≤–µ–¥–∏—Ç–µ –ª–∏—á–Ω—ã–∏ÃÜ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: ")
                if id_.isdigit() and not id_ in [uid[2] for uid in user_list]:
                    break
            while True:
                access_level = input("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ")
                if access_level.isdigit() and 0 < int(access_level) < 8:
                    user_list.append((name, access_level, id_))
                    break

    def recreate_file_to_json(self, file_name: str):

        my_dict = {}

        with(
            open(file_name, 'r', encoding='utf-8') as read_file,
            open('json_file.json', 'a', encoding='utf-8') as writer_file
        ):
            while data := read_file.readline():
                name, num = data.replace('\n', '').split('|')
                my_dict[str(name).title()] = float(num)
            json.dump(my_dict, writer_file, ensure_ascii=False, separators=(',\n', ':'))


if __name__ == '__main__':
    number()