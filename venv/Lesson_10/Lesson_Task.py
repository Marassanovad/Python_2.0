import math as m
import random as rnd


class Circle:
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1

    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å.
    üìå –ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–¥–∏—É—Å –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
    üìå –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –µ–µÃà –ø–ª–æ—â–∞–¥—å.
    '''
    def __init__(self, radius: int):
        self.radius = radius

    def return_circumference(self):
        return m.pi * (2 * self.radius)

    def square(self):
        return m.pi * (self.radius ** 2)

class Rectangle:
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2

    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫.
    üìå –ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
    —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
    üìå –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å.
    üìå –ï—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø–µ—Ä–µ–¥–∞–µÃà—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —É –Ω–∞—Å –∫–≤–∞–¥—Ä–∞—Ç.
    '''

    def __init__(self, length: int, width: int = None):
        self.length = length
        self.width = width if width is not None else length

    def perimeter(self):
        return (self.length + self.width) * 2

    def square(self):
        return self.length * self.width

class Person:
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
    üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ: –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ —Ç.–ø. –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä.
    üìå –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–µ—Ç–æ–¥—ã birthday –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –Ω–∞ –≥–æ–¥, full_name –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª–Ω–æ–≥–æ –§–ò–û –∏ —Ç.–ø. –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä.
    üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–æ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–∏ÃÜ –≤–æ–∑—Ä–∞—Å—Ç.
    '''
    def __init__(self, name: str=None, surname: str=None, age: int=0, gender: str=None):
        self.name = name
        self.surname = surname
        self.__age = age
        self.gender = gender
        
    def get_age(self):
        return self.__age

    def birthday(self):
        self.__age +=1

    def full_name(self):
        return f'{self.surname} {self.name}'

    def __str__(self):
        return f'{self.surname} {self.name} {self.gender} {self.__age}'

class Employee(Person):
    '''
    –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
    üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –°–æ—Ç—Ä—É–¥–Ω–∏–∫.
    üìå –í–æ—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ—Å—å –∫–ª–∞—Å—Å–æ–º —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.
    üìå –£ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:
        ‚óã —à–µ—Å—Ç–∏–∑–Ω–∞—á–Ω—ã–∏ÃÜ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–∏ÃÜ –Ω–æ–º–µ—Ä
        ‚óã —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –≤—ã—á–∏—Å–ª—è–µ–º—ã–∏ÃÜ –∫–∞–∫ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —Å—É–º–º—ã —Ü–∏—Ñ—Ä id –Ω–∞ —Å–µ–º—å
    '''
    def __init__(self, name: str = None, surname: str = None, age: int = 0, gender: str = None, profession: str = None):
        super().__init__(name, surname, age, gender)
        self.profession = profession
        self._id = rnd.randint(100000, 999999)
        # self._access_level = Employee.access_level(self)

    @property
    def access_level(self):
        sum = 0
        # str_id - str(self.id)
        # list_id_numbers = sum(list(map(int, str_id)))
        # return list_id_numbers % 7
        for num in str(self._id):
            sum += int(num)
        return sum % 7

    def __str__(self):
        return f'{self.access_level} {self._id}'

'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ —Ç—Ä–∏ (–∏–ª–∏ –±–æ–ª–µ–µ) –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä —Ä—ã–±—ã, –ø—Ç–∏—Ü—ã –∏ —Ç.–ø.
üìå –£ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –æ–±—â–∏–µ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–º—è, —Ç–∞–∫ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.
üìå –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–∏ÃÜ—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–∏ÃÜ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.

–ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
üìå –î–æ—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –∑–∞–¥–∞—á—É 5.
üìå –í—ã–Ω–µ—Å–∏—Ç–µ –æ–±—â–∏–µ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–æ–≤ –≤ –∫–ª–∞—Å—Å –ñ–∏–≤–æ—Ç–Ω–æ–µ.
üìå –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–∞—Å–ª–µ–¥—É–∏ÃÜ—Ç–µ –æ—Ç –Ω–µ–≥–æ.
üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∫–ª–∞—Å—Å—ã –≤–Ω–µ—Å–µ–Ω—ã –ø—Ä–∞–≤–∫–∏.
'''

class Animal:
    def __init__(self, name: str = None, breed: str = 'unknown', age: int = 0, animal_type: str='unknown'):
        self.name = name
        self.breed = breed
        self.age = age
        self.animal_type = animal_type

    def __str__(self):
        return f'{self.name}, {self.breed}, {self.age}'

    def print_specific(self):
        return f'–°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ'

class Dog(Animal):
    def __init__(self, name: str = None, breed: str = 'unknown', age: int = 0, commands: list[str] = 'unknown'):
        super().__init__(name, breed, age)
        # self.name = name
        # self.breed = breed
        self.commands = commands

    def __str__(self):
        return f'{self.name}, {self.breed}, {self.age}, {self.commands}'

    def print_specific(self):
        return f'{self.commands}'


class Fish(Animal):
    def __init__(self, name: str = None, breed: str = 'unknown', age: int = 0, count_fins: int = 0):
        super().__init__(name, breed, age)
        # self.name = name
        # self.breed = breed
        self.count_fins = count_fins

    def __str__(self):
        return f'{self.name}, {self.breed}, {self.age}, {self.count_fins}'

    def print_specific(self):
        return f'{self.count_fins}'

class Bird(Animal):
    def __init__(self, name: str = None, breed: str = 'unknown', age: int = 0, count_flights: int = 0):
        super().__init__(name, breed, age)
        # self.name = name
        # self.breed = breed
        self.count_flights = count_flights

    def __str__(self):
        return f'{self.name}, {self.breed}, {self.age}, {self.count_flights}'

    def print_specific(self):
        return f'{self.count_flights}'

if __name__ == '__main__':
    dog = Dog('Kat', 'Husky', ['–ì–æ–ª–æ—Å', '–°–∏–¥–µ—Ç—å'])
    print(type(dog))
    # fish = Fish('Nemo', 'Gold Fish', 3)
    # bird = Bird('Kesha', '–ü–æ–ø—É–≥–∞–π', 2)
    # animal = Animal('Lexa', 'Cat', 12)
    # print(animal.print_specific())
    # print(dog.print_specific())
    # print(fish.print_specific())
    # print(bird.print_specific())



    # h1 = Person('Sasha', 'Kim', 18, 'm')
    # h2 = Person('Masha', 'Won', 24, 'f')
    # e1 = Employee('Masha', 'Won', 24, 'f')
    # print(e1)
    # print(h1)
    # print(h2)
    # h2.birthday()
    # print(h2.get_age())
    # print(h1.full_name())